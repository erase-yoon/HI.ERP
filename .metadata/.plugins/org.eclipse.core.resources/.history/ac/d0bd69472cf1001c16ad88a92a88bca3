/*
 * 아래 클래스의 소속 패키지를 선언.
 * 모든 클래스의 최 상단에는 무조건 패키지 선언이 등장한다.
 */
package com.daum.test;

/*
 * Test01 이라는 클래스 선언.
 * 자바는 클래스(class) 또는 인터페이스(interface)라는 최소 단위 프로그램들로 구성된다.
 * 클래스 이름은 관용적으로 대문자로 시작한다.
 * 클래스 이름은 의미 있게 주어야 한다.(가독성을 위해)
 */
public class Test_01_variable {

	/*
	 * 자바 가상머신(JVM)이 찾아서 호출하는 main 메소드 선언.
	 * main 메소드에 붙어 있는 public static void의 키워드는 추후 설명
	 */
	public static void main(String[] args) {

		
		int student_no = 1;
		/*
		 * int student_no;
		 * //
		 * 학생 번호를 저장하기 위해
		 * int형 데이터(-2147483648 ~ 2147483647 정수 데이터)를
		 * 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 student_no라고 명한다.
		 * -------------------------------------------------------
		 * 학생 번호를 저장하기 위해
		 * int형 데이터를 저장할 변수 student_no를 선언하기
		 * //
		 * 
		 * student_no = 1;
		 * // student_no 라는 변수에 1을 저장
		 */
		
		String student_name = "사오정";
		/*
		 * String student_name = new String("사오정");
		 * //FM 코딩
		 * 
		 * 학생이름을 저장하기 위해
		 * [String 객체]의 메모리 위치 주소값을 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 stdent_name 이라고 명한다.
		 * 문자 "사오정"을 관리하는 String 객체를 생성하여 메모리에 올리고
		 * 이 객체의 메모리 주소값을 변수 student_name에 저장하기 
		 */
		
		String birth_day = "2004-12-25";
		/*
		 * 생일을 저장하기 위해
		 * [String 객체]의 메모리 위치 주소값을 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 birth_day라고 명한다.
		 * 문자 "2004-12-25"을 관리하는 String 객체를 생성하여 메모리에 올리고 
		 * 이 객체의 메모리 위치 주소값을 변수 birth_day에 저장하기.
		 */
		
		char gender = '남';
		/*
		 * 성별을 저장하기 위해
		 * char형 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 gender라고 명한다.
		 * 이 메모리 공간에 문자형 데이터 '남'을 저장한다.
		 * --------------------------------------------------
		 * 성별을 저장하기 위해
		 * char형 데이터를 저장할 변수 gender를 선언하기
		 * 변수 gender에 '남' 저장하기
		 */
		
		boolean is_married = false;
		/*
		 * 결혼여부를 저장하기 위해
		 * boolean 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 is_married라고 명한다.
		 * 이 메모리 공간에 논리형 데이터 false를 저장한다.
		 * --------------------------------------------------
		 * 결혼여부를 저장하기 위해
		 * boolean형 데이터를 저장할 변수 is_married를 선언하기
		 * 변수 is_married에 false 저장하기
		 */
		
		int married_cnt = 1;
		
		String jumin_num = "911204-1xxxxxx";
		/*
		 * 주민번호를 저장하기 위해
		 * [String 객체]의 메모리 위치 주소값을 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 jumin_num라고 명한다.
		 * 문자 "911204-1xxxxxx"을 관리하는 String 객체를 생성하여 메모리에 올리고 
		 * 이 객체의 메모리 위치 주소값을 변수 jumin_num에 저장하기.
		 * --------------------------------------------------
		 * 주민번호를 저장하기 위해
		 * [String 객체]의 메모리 위치 주소값을 저장할 변수 jumin_num을 선언하기.
		 * 문자 "911204-1xxxxxx"을 관리하는 String 객체를 생성하고 
		 * 이 객체의 메모리 위치 주소값을 변수 jumin_num에 저장하기.
		 */
		
		double weight = 73.0;
		/*
		 * 몸무게를 저장하기 위해
		 * double형 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 weight라고 명한다.
		 * 변수 weight에 73.0 저장하기
		 */
		
		double height = 171.3;
		/*
		 * 키를 저장하기 위해
		 * double형 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 height 라고 명한다.
		 * 이 메모리 공간에 실수형 데이터 171.3 을 저장한다.
		 * -------------------------------------------------
		 * 키를 저장하기 위해
		 * 실수형 데이터를 저장할 변수 height 를 선언하고
		 * 171.3 저장하기.
		 */

		double kor = 100;
		/*
		 * 국어점수를 저장하기 위해
		 * double형 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 kor 라고 명한다.
		 * 이 메모리 공간에 실수형 데이터 100 을 저장한다.
		 * -------------------------------------------------
		 * 키를 저장하기 위해
		 * 실수형 데이터를 저장할 변수 kor 를 선언하고
		 * 100 저장하기.
		 */
		
		double eng = 100;
		/*
		 * 영어점수를 저장하기 위해
		 * double형 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 eng 라고 명한다.
		 * 이 메모리 공간에 실수형 데이터 100 을 저장한다.
		 * -------------------------------------------------
		 * 키를 저장하기 위해
		 * 실수형 데이터를 저장할 변수 eng 를 선언하고
		 * 100 저장하기.
		 */
		
		double math = 100;
		/*
		 * 수학점수를 저장하기 위해
		 * double형 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 math 라고 명한다.
		 * 이 메모리 공간에 실수형 데이터 100 을 저장한다.
		 * -------------------------------------------------
		 * 키를 저장하기 위해
		 * 실수형 데이터를 저장할 변수 math 를 선언하고
		 * 100 저장하기.
		 */
		
		double tot = kor + eng + math;
		/*
		 * 총점를 저장하기 위해
		 * double형 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 tot 라고 명한다.
		 * 이 메모리 공간에 
		 * kor 변수안의 데이터와 
		 * eng 변수안의 데이터와 
		 * math 변수안의 데이터를 더하여 결과값을 저장한다.
		 * -------------------------------------------------
		 * 키를 저장하기 위해
		 * 실수형 데이터를 저장할 변수 tot 를 선언하고
		 *  kor + eng + math의 결과값 저장하기.
		 */
		
		double avg = tot / 3.0;
		/*
		 * 평균을 저장하기 위해
		 * double형 데이터를 저장할 메모리 공간을 확보하고
		 * 이 곳 이름을 avg 라고 명한다.
		 * 이 메모리 공간에 
		 * tot 변수안의 데이터를 3으로 나눈 결과값을 저장한다.
		 * -------------------------------------------------
		 * 평균를 저장하기 위해
		 * 실수형 데이터를 저장할 변수 avg 를 선언하고
		 * tot 변수안의 데이터를 3으로 나눈 결과값 저장하기.
		 */
		
		// System.out.println("학생 이름 : " + student_name + " / 학생 번호 : " + student_no);
		/*
		 * 변수 안의 데이터를 콘솔 창에 출력하기
		 */
		System.out.println( "학생번호 : " + student_no );
		System.out.println( "학생이름 : " + student_name );
		System.out.println( "생일 : " + birth_day );
		System.out.println( "몸무게 : " + weight );
		System.out.println( "키 : " + height );
		System.out.println( "국어점수 : " + kor );
		System.out.println( "영어점수 : " + eng );
		System.out.println( "수학점수 : " + math );
		System.out.println( "총점 : " + tot );
		System.out.println( "평균 : " + avg );
		System.out.println( "결혼여부 : " + is_married );
		System.out.println( "결혼횟수 : " + married_cnt );
		System.out.println( "성별 : " + gender );
		System.out.println( "주민번호 : " + jumin_num );

	}

}

/*
 * <문> int student_no = 1; 을 int student_no = 1.5; 로 수정하면?
 * 
 * 에러 발생.
 * student_no 변수에는 정수형만 저장하기로 했는데 실수가 저장되었기 때문에 에러 발생
 * 
 * <문> String student_name = "사오정"; 을 String student_name = '사오정'; 으로 수정하면?
 * 
 * 에러 발생.
 * String 객체가 관리하는 1개 이상의 문자 데이터는 ""(더블쿼트)로 감싸야 한다.
 * <주의>String은 기본 자료형이 아니다.
 * 너무 많이 사용하다 보니 형식이 파괴되어 기본형 처럼 사용하나 절대 기본형이 아니다.
 * 
 * 변수의 자료형은 참조형인데 변수에 들어가는 데이터에 들어가는 자료형은 ''로 쓰는 char형을 사용함
 * 
 * <문> int student_no = 1; 을 int student_no; 로 수정하면?
 * 
 * int student_no; 는 변수만 선언하고 데이터를 저장하지 않으면
 * 변수에 아무 값이 저장되지 않는다.
 * 존재하지 않는 데이터 사용할 때에 에러가 발생한다.
 * 
 * 즉, int student_no; 부분에서는 에러가 발생하지 않고
 * 변수를 사용하는 부분에서 에러가 발생한다.
 *  ex) System.out.println("학생번호 : " + student_no);
 * 
 * --------------------------------------------------------------------------------
 * <참고> 지역변수는 선언하고 데이터를 저장하지 않으면 자동 초기화가 안된다.
 * <참고> 속성변수는 선언하고 데이터를 저장하지 않으면 자동 초기화가 된다.
 * --------------------------------------------------------------------------------
 * initialize : 초기화
 * 
 * <문> double weight = 67.5; 를 double weight = 67; 로 수정하면?
 * 
 * 에러 없음.
 * 실수형 변수에 정수형 데이터는 예외적으로 저장될 수 있다.
 * 수학적으로 정수는 실수에 포함되기 때문이다.
 * 정수형이 실수형으로 바뀐 후 저장된다.
 * 이렇게 형이 변환되는 것을 암시적 형변환(implicit data type conversion)이 일어난다.
 * 즉 67이 67.0으로 바뀐다.
 * 
 * <문> double tot = kor + eng + math; 코드에서 =(이퀄) 오른쪽에
 * 변수가 등장하면 어떻게 분석해야 하나?
 * 
 * =(이퀄) 오른쪽에 변수는 변수로 코딩하지만 변수안의 데이터로 바꿔봐야 한다.
 * kor, eng, math 는 데이터로 바꾸어 봐야 한다.
 * 
 * <문> double tot = kor + eng + math; 에서 +와
 * System.out.println( "키 : " + height ); 의 +는 무엇이 다른가?
 * 
 * double tot = kor + eng + math; 에서 +는 변수안의 데이터를 더하라는 [사칙 연산자]이다.
 * 
 * System.out.println( "키 : " + height );에서 +는 [연결 연산자]이다.
 * 왼쪽의 문자와 오른쪽 문자를 붙이라는 의미이다.
 * 만약 '문자 + 숫자' 또는 '숫자 + 문자' 라면 숫자가 숫자문자로 형변환 되어 문자와 붙여진다.
 * 
 * <문> String student_name = "사오정";  를   String student_name = "";  로 수정하면?
 * 
 * 에러 없음.
 * 자바에서는 길이가 없는 문자도 문자 취급한다.
 * 
 * <문> String student_name = "사오정";  를   String student_name = " ";  로 수정하면?
 * 
 * 에러 없음.
 * 자바에서는 공백도 분명한 문자 데이터이다.
 * 
 * <문> double height = 171.3; 를 double weight = 171.3; 로 수정하면?
 * 
 * 에러 발생.
 * 동일한 블럭( {~} ) 안에서 동일한 이름의 변수를 2개 이상 선언할 수는 없다.
 * 선언 불가 이유 : 변수를 사용해야 할 경우 어떤 변수를 사용해야 할지 결정할 수 없다.
 * 
 * <문> double weight = 67.5; 를 weight = 70.5; 로 수정하면?
 * 
 * 에러 없음.
 * double weight = 67.5; -> 실수형 저장하는 변수 선언하고 데이터 저장
 * weight = 70.5;        -> 기존에 선언된 변수 weight에 70.5를 재 저장해라.(데이터 갱신)
 * 
 * <문> 아래 각 코드의 에러 수정 방법을 적으시오. <입사 시험 문제 + 중요한 코딩 분석 능력>
 * 
 * char gender = "남";
 * 	1. char gender = '남';
 * 	2. String gender = "남";
 * 
 * char gender = "남자";
 * 	1. String gender = "남자";
 * 	2. <주의> char gender = '남자'; -> 불가능. ''(싱글쿼트)는 1개의 문자만 감싼다.
 * 
 * String gender = '남자';
 * 	1. String gender = "남자";
 * 	2. <주의> char gender = '남자'; -> 불가능. ''(싱글쿼트)는 1개의 문자만 감싼다.
 * 
 */
