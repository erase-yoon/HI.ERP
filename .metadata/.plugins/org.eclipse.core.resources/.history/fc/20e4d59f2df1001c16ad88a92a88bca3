// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
// 아래 클래스의 소속 패키지를 선언.
// 모든  클래스의 최 상단에는 무조건 패키지 선언이 등장한다.
// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
package com.daum.test;

// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
// Test_03 이라는 클래스 선언.
// 자바는 클래스(class) 또는 인터페이스(interface)라는 최소 단위 프로그램들로 구성된다.
// 클래스 이름은 관용적으로 대문자로 시작한다.
// 클래스 이름은 의미 있게 주어야한다.(=가독성)
// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
public class Test_02_operators {

	// mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
	// 자바 가상머신(JVM)이 찾아서 호출하는 main 메소드 선언.
	// main 메소드에 붙어 있는 public static void 의 키워드는 나중에
	// 배울테니 당분간 main 메소드 안의 코딩에 집중하자.
	// mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
	public static void main(String[] args) {
				
		// ------------------------------
		// num1 변수 선언하고 3 저장
		// -----------------------------
		int num1 = 3;

		// ------------------------------
		// num2 변수 선언하고
		// num1 변수안의 데이터 1 증가하고
		// num1 변수안의 데이터를 num2 변수 안에 저장.
		// ------------------------------
		int num2 = ++num1;
		// ++num1; int num2 = num1;
		// num1++; int num2 = num1;
		System.out.println("num1 : " + num1);
		System.out.println("num2 : " + num2);
		System.out.println("---------------------------------------------");
		
		// ------------------------------
		// num3 변수 선언하고
		// num1 변수안의 데이터를 num2 변수 안에 저장.
		// num1 변수안의 데이터 1 증가하기
		// ------------------------------
		int num3 = num1++;
		// int num2 = num1; ++num1;
		// int num2 = num1; num1++;
		System.out.println("num1 : " + num1);
		System.out.println("num3 : " + num3);
		System.out.println("---------------------------------------------");
		
		// ------------------------------
		// num4 변수 선언하고 5 저장
		// num5 변수 선언하고 ++num4 + num4 저장
		// -----------------------------
		int num4 = 5;
		
		int num5 = ++num4 + num4;
		//         ------   ----
		//           6       6
		System.out.println("num4 : " + num4);
		// 6
		System.out.println("num5 : " + num5);
		// 12
		System.out.println("---------------------------------------------");
		
		
		// ------------------------------
		// num6 변수 선언하고 2 저장
		// num7 변수 선언하고 num6++ + num6 저장
		// -----------------------------
		int num6 = 2; 
		int num7 = num6++ + num6; 
		//         ------   ----
		//           2       3

		System.out.println("num6 : " + num6);
		// 3
		System.out.println("num7 : " + num7);
		// 5
		System.out.println("---------------------------------------------");

		// ------------------------------
		// num8 변수 선언하고 4 저장
		// num9 변수 선언하고 num8++ + ++num8 저장
		// -----------------------------
		int num8 = 4; 
		int num9 = num8++ + ++num8; 
		//         ------   ------
		//           4        6
		System.out.println("num8 : " + num8);
		// 6
		System.out.println("num9 : " + num9);
		// 10
		System.out.println("---------------------------------------------");
		
		// ------------------------------
		// num10 변수 선언하고 -2 저장
		// num11 변수 선언하고 num10 + --num10 - num10++ - --num10 저장
		// -----------------------------
		int num10 = -2; 
		int num11 = num10 + --num10 - num10++ - --num10; 
		//          -----   -------   -------   -------
		//           -2       -3        -3        -3
		System.out.println("num10 : " + num10);
		// -3
		System.out.println("num11 : " + num11);
		// 1
		System.out.println("---------------------------------------------");
		
		// ------------------------------
		// num20 변수 선언하고 0 저장
		// num21 변수 선언하고 -3 저장
		// num22 변수 선언하고 num20*2 - --num21 + num21++ - ++num20*3 저장
		// -----------------------------
		int num20 = 0; 
		int num21 = -3; 
		int num22 = num20*2 - --num21 + num21++ - ++num20*3; 
		//          -------   -------   -------   ---------
		//             0        -4        -4          3
		System.out.println("num20 : " + num20);
		// 1
		System.out.println("num21 : " + num21);
		// -3
		System.out.println("num22 : " + num22);
		// -3
		System.out.println("---------------------------------------------");
		
		
		// -------------------------------------------------
		// 정수형 데이터가 저장되는 변수 n, m를 선언하고 정수값 저장하기.
		// -------------------------------------------------
		int n = 5;
		int m = 2;
		
		// -------------------------------------------------
		// 정수형 데이터가 저장되는 변수 p를 선언하고 n변수값/m변수값의 결과 저장하기.
		// -------------------------------------------------
		int p = n/m;
		System.out.println("p : " + p);
		// ---------------------------------
		// 출력 결과는 2 이다.
		// 정수/정수의 결과도 정수이다. 즉 소수점이 짤린다
		// ---------------------------------
		
		// -------------------------------------------------
		// 실수형 데이터가 저장되는 변수 q를 선언하고 n/m의 연산 결과 저장하기.
		// -------------------------------------------------
		double q = n/m;
		System.out.println("q : " + q);	
		// ---------------------------------
		// 출력 결과는 2.0이다.
		// n/m의 연산 결과는 2이다.
		// 연산 결과 2를 q에 저장할 때 2.0으로 형변환된다.
		// 변수의 자료형과 저장되는 자료형이 달라 형변환이 발생
		// ---------------------------------
		
		// -------------------------------------------------
		// 실수형 데이터가 저장되는 변수 a 를 선언하고 5 저장하기.
		// 실수형 데이터가 저장되는 변수 b 를 선언하고 2 저장하기.
		// 실수형 데이터가 저장되는 변수 c 를 선언하고 a/b 의 결과 저장하기.
		// -------------------------------------------------
		double a = 5;
		// 5가 5.0으로 형변환되서 변수 a에 저장
		double b = 2;
		// 2가 2.0으로 형변환되서 변수 b에 저장
		double c = a / b;
		// 5.0/2.0의 결과 2.5가 변수 c에 저장
		System.out.println("c : "  + c);
		
		// -------------------------------------------------
		// 정수형 데이터가 저장되는 변수 e를 선언하고 5 저장하기.
		// 실수형 데이터가 저장되는 변수 f를 선언하고 2 저장하기.
		// 실수형 데이터가 저장되는 변수 g를 선언하고 e/f의 결과 저장하기.
		// -------------------------------------------------
		int e = 5;
		// 5가 변수 e에 저장
		double f = 2;
		// 2가 2.0으로 형변환되서 변수 f에 저장
		double g = e / f;
		// 5/2.0가 5.0/2.0으로 형변환되서 5.0/2.0의 결과 2.5가 변수 g에 저장
		System.out.println("g : "  + g);
		
		
		int h = 5;
		// 5가 변수 h에 저장
		int i = 2;
		// 2가 변수 i에 저장
		double j = (double)h/i;
		// (double)5 / 2 ⇨ 5.0 / 2 ⇨  5.0 / 2.0 ⇨ 2.5
		System.out.println("j : " + j);	
		
		int x = 5;
		// 5가 변수 x에 저장
		int y = 2;
		// 2가 변수 y에 저장
		double z = (double)(x/y);
		// (double)(5 / 2) ⇨ (double)2 ⇨ 2.0
		System.out.println("z : " + z);	
		
	}

}
